apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.live.yml -o simple.yml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: elasticsearch
    name: elasticsearch
  spec:
    ports:
    - name: "9200"
      port: 9200
      targetPort: 9200
    selector:
      io.kompose.service: elasticsearch
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.live.yml -o simple.yml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: kibana
    name: kibana
  spec:
    ports:
    - name: "5601"
      port: 5601
      targetPort: 5601
    selector:
      io.kompose.service: kibana
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.live.yml -o simple.yml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: elasticsearch
    name: elasticsearch
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: elasticsearch
      spec:
        containers:
        - image: blacktop/elasticsearch:7.0
          name: elasticsearch
          ports:
          - containerPort: 9200
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.live.yml -o simple.yml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: filebeat
    name: filebeat
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: filebeat
      spec:
        containers:
        - args:
          - -e
          image: blacktop/filebeat:7.0.0
          name: filebeat
          command: [ "/bin/sh", "-c", "ls /etc/config/" ]
          resources: {}
          volumeMounts:
          - mountPath: /etc/config
            name: filebeat-claim0
        restartPolicy: Always
        volumes:
        - name: filebeat-claim0
          #persistentVolumeClaim:
          #  claimName: filebeat-claim0
          configMap:
        # Provide the name of the ConfigMap containing the files you want
        # to add to the container
            name: special-config
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: filebeat-claim0
    name: filebeat-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.live.yml -o simple.yml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: kibana
    name: kibana
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: kibana
      spec:
        containers:
        - image: blacktop/kibana:7.0
          name: kibana
          ports:
          - containerPort: 5601
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.live.yml -o simple.yml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: zeek
    name: zeek
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: zeek
      spec:
        containers:
        - args:
          - -i
          - af_packet::eth0
          - local
          image: blacktop/zeek:elastic
          name: zeek
          command: [ "/bin/sh", "-c", "ls /etc/config/" ]
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_RAW
          volumeMounts:
          - mountPath: /etc/config
            name: zeek-claim0
        restartPolicy: Always
        volumes:
        - name: zeek-claim0
          #persistentVolumeClaim:
           # claimName: zeek-claim0
          configMap:
        # Provide the name of the ConfigMap containing the files you want
        # to add to the container
            name: special-config
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: zeek-claim0
    name: zeek-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
kind: List
metadata: {}
